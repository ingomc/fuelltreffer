---
import type { ApiResponse } from '../types/api';
import ParticipantDashboard from './svelte/ParticipantDashboard.svelte';

// Get team ID from props or use default
export interface Props {
  teamId?: string;
}

const { teamId = '308868' } = Astro.props;
let participantData: ApiResponse | null = null;

try {
  // Server-side fetch during SSR with selected team
  const response = await fetch(`${Astro.url.origin}/api/participant/${teamId}`);
  
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  
  participantData = await response.json();
} catch (err) {
  console.error('Error fetching participant data:', err);
}

// Configuration for client-side JavaScript
const frontendConfig = {
  API_BASE_URL: Astro.url.origin,
  DEFAULT_PARTICIPANT_ID: teamId
};
---

<ParticipantDashboard 
  client:load
  initialData={participantData}
  apiBaseUrl={frontendConfig.API_BASE_URL}
  defaultParticipantId={frontendConfig.DEFAULT_PARTICIPANT_ID}
/>